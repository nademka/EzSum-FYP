{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Projex\\\\Summary FYP\\\\Frontend\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EzSumLogo from './Ez_Sum.svg'; // Ensure the path is correct\nimport NeuroTypeDropdown from './components/NeuroTypeDropdown';\nimport UserInput from './components/UserInput';\nimport SummaryDisplay from './components/SummaryDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [neuroType, setNeuroType] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [summary, setSummary] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!userInput || !neuroType) {\n      setSummary('');\n      return;\n    }\n    fetchSummaryBasedOnType();\n  }, [userInput, neuroType]);\n  const fetchSummaryBasedOnType = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`http://localhost:8000/summarize/${neuroType.toLowerCase()}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: userInput\n        })\n      });\n      if (!response.ok) throw new Error('Failed to fetch');\n      const data = await response.json();\n      setSummary(data.summary);\n    } catch (error) {\n      console.error('Error fetching summary based on type:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: EzSumLogo,\n        alt: \"EZ Sum Logo\",\n        className: \"App-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"EZ Sum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-bold\",\n          children: \"Neurodivergence Input Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NeuroTypeDropdown, {\n          onChange: e => setNeuroType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n          value: userInput,\n          onChange: e => setUserInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchSummaryBasedOnType,\n          children: \"Fetch Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-area\",\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading summary...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(SummaryDisplay, {\n          summary: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 62\n        }, this), !userInput || !neuroType ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a type and enter some text to see the summary.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 49\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"W7XsNoSk9BK+eZkX+KDVFloSJaU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EzSumLogo","NeuroTypeDropdown","UserInput","SummaryDisplay","jsxDEV","_jsxDEV","App","_s","neuroType","setNeuroType","userInput","setUserInput","summary","setSummary","isLoading","setIsLoading","fetchSummaryBasedOnType","response","fetch","toLowerCase","method","headers","body","JSON","stringify","text","ok","Error","data","json","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["D:/Work/Projex/Summary FYP/Frontend/my-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EzSumLogo from './Ez_Sum.svg'; // Ensure the path is correct\nimport NeuroTypeDropdown from './components/NeuroTypeDropdown';\nimport UserInput from './components/UserInput';\nimport SummaryDisplay from './components/SummaryDisplay';\n\nconst App: React.FC = () => {\n    const [neuroType, setNeuroType] = useState('');\n    const [userInput, setUserInput] = useState('');\n    const [summary, setSummary] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        if (!userInput || !neuroType) {\n            setSummary('');\n            return;\n        }\n        fetchSummaryBasedOnType();\n    }, [userInput, neuroType]);\n\n    const fetchSummaryBasedOnType = async () => {\n        setIsLoading(true);\n        try {\n            const response = await fetch(`http://localhost:8000/summarize/${neuroType.toLowerCase()}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ text: userInput })\n            });\n            if (!response.ok) throw new Error('Failed to fetch');\n            const data = await response.json();\n            setSummary(data.summary);\n        } catch (error) {\n            console.error('Error fetching summary based on type:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={EzSumLogo} alt=\"EZ Sum Logo\" className=\"App-logo\" />\n                <h1>EZ Sum</h1>\n            </header>\n            <div className=\"content\">\n                <div className=\"input-area\">\n                    <h2 className=\"text-lg font-bold\">Neurodivergence Input Form</h2>\n                    <NeuroTypeDropdown onChange={e => setNeuroType(e.target.value)} />\n                    <UserInput value={userInput} onChange={e => setUserInput(e.target.value)} />\n                    <button onClick={fetchSummaryBasedOnType}>Fetch Summary</button>\n                </div>\n                <div className=\"output-area\">\n                    {isLoading ? <p>Loading summary...</p> : <SummaryDisplay summary={summary} />}\n                    {!userInput || !neuroType ? <p>Please select a type and enter some text to see the summary.</p> : null}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}