{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Projex\\\\Summary FYP\\\\Frontend\\\\my-app\\\\src\\\\components\\\\UserInput.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInput = ({\n  value,\n  onChange\n}) => {\n  const speak = text => {\n    const speech = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(speech);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full p-2 border rounded\",\n      value: value,\n      onChange: onChange,\n      rows: 4,\n      placeholder: \"Enter your text here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => speak(value),\n      className: \"ml-2 p-2 bg-blue-500 text-white rounded\",\n      children: \"Speak Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = UserInput;\nexport default UserInput;\nvar _c;\n$RefreshReg$(_c, \"UserInput\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UserInput","value","onChange","speak","text","speech","SpeechSynthesisUtterance","window","speechSynthesis","children","className","rows","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Work/Projex/Summary FYP/Frontend/my-app/src/components/UserInput.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface UserInputProps {\r\n    value: string;\r\n    onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void; // Adjusted to handle textarea\r\n}\r\n\r\nconst UserInput: React.FC<UserInputProps> = ({ value, onChange }) => {\r\n    const speak = (text: string) => {\r\n        const speech = new SpeechSynthesisUtterance(text);\r\n        window.speechSynthesis.speak(speech);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <textarea\r\n                className=\"w-full p-2 border rounded\"\r\n                value={value}\r\n                onChange={onChange}\r\n                rows={4}\r\n                placeholder=\"Enter your text here...\"\r\n            ></textarea>\r\n            <button onClick={() => speak(value)} className=\"ml-2 p-2 bg-blue-500 text-white rounded\">Speak Input</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserInput;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACjE,MAAMC,KAAK,GAAIC,IAAY,IAAK;IAC5B,MAAMC,MAAM,GAAG,IAAIC,wBAAwB,CAACF,IAAI,CAAC;IACjDG,MAAM,CAACC,eAAe,CAACL,KAAK,CAACE,MAAM,CAAC;EACxC,CAAC;EAED,oBACIN,OAAA;IAAAU,QAAA,gBACIV,OAAA;MACIW,SAAS,EAAC,2BAA2B;MACrCT,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBS,IAAI,EAAE,CAAE;MACRC,WAAW,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACZjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMd,KAAK,CAACF,KAAK,CAAE;MAACS,SAAS,EAAC,yCAAyC;MAAAD,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5G,CAAC;AAEd,CAAC;AAACE,EAAA,GAlBIlB,SAAmC;AAoBzC,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}